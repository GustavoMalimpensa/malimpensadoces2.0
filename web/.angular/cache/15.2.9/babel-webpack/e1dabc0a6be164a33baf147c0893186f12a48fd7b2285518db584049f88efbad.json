{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet FinalizeOrderComponent = class FinalizeOrderComponent {\n  constructor(carrinhoService) {\n    this.carrinhoService = carrinhoService;\n    this.metodoEntregaOpcao = 'entregar'; // Declare a variável\n    this.metodoPagamento = 'pix';\n    this.metodoEntrega = 'retirar';\n    this.enderecoEntrega = '';\n    this.dataHora = '';\n    this.numeroLoja = '+5519999372133';\n    this.produtosDoCarrinho = []; // Declare a propriedade produtosDoCarrinho aqui\n  }\n\n  ngOnInit() {\n    // Obtenha os produtos do carrinho usando o serviço\n    this.produtosDoCarrinho = this.carrinhoService.obterProdutosDoCarrinho();\n  }\n  toggleEntregaOpcao() {\n    // Implemente a função\n  }\n  calcularPrecoTotal() {\n    let total = 0;\n    for (const item of this.produtosDoCarrinho) {\n      total += item.price * item.quantidade;\n    }\n    return total;\n  }\n  concluirCompra() {\n    if (this.produtosDoCarrinho.length === 0) {\n      return;\n    }\n    const mensagem = 'Olá, gostaria de realizar um pedido!\\n\\n' + this.produtosDoCarrinho.map(item => `${item.quantidade}x ${item.name} - R$${(item.price * item.quantidade).toFixed(2)}`).join('\\n') + '\\n-------------------------------\\n' + `Ficando no Total: R$${this.calcularPrecoTotal().toFixed(2)}\\n\\n` + `O método de pagamento vai ser: ${this.metodoPagamento}\\n` + `Metodo de entrega: ${this.metodoEntrega === 'retirar' ? 'Vou retirar o pedido' : 'Vou querer que entregue (' + this.enderecoEntrega + ')'}\\n` + `Tudo isso quero para o dia: ${this.dataHora}`;\n    const linkWhatsApp = `https://wa.me/${this.numeroLoja}?text=${encodeURIComponent(mensagem)}`;\n    window.open(linkWhatsApp, '_blank');\n  }\n};\nFinalizeOrderComponent = __decorate([Component({\n  selector: 'app-finalize-order',\n  templateUrl: './finalize-order.component.html',\n  styleUrls: ['./finalize-order.component.css']\n})], FinalizeOrderComponent);\nexport { FinalizeOrderComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAiB,eAAe;AAQ3C,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAUjCC,YAAoBC,eAAgC;IAAhC,oBAAe,GAAfA,eAAe;IARnC,uBAAkB,GAAW,UAAU,CAAC,CAAC;IACzC,oBAAe,GAAW,KAAK;IAC/B,kBAAa,GAAW,SAAS;IACjC,oBAAe,GAAW,EAAE;IAC5B,aAAQ,GAAW,EAAE;IACrB,eAAU,GAAW,gBAAgB;IACrC,uBAAkB,GAAU,EAAE,CAAC,CAAC;EAEwB;;EAExDC,QAAQ;IACN;IACA,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACF,eAAe,CAACG,uBAAuB,EAAE;EAC1E;EAEAC,kBAAkB;IAChB;EAAA;EAGFC,kBAAkB;IAChB,IAAIC,KAAK,GAAG,CAAC;IACb,KAAK,MAAMC,IAAI,IAAI,IAAI,CAACL,kBAAkB,EAAE;MAC1CI,KAAK,IAAIC,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACE,UAAU;;IAEvC,OAAOH,KAAK;EACd;EAEAI,cAAc;IACZ,IAAI,IAAI,CAACR,kBAAkB,CAACS,MAAM,KAAK,CAAC,EAAE;MACxC;;IAGF,MAAMC,QAAQ,GACZ,0CAA0C,GAC1C,IAAI,CAACV,kBAAkB,CAACW,GAAG,CAACN,IAAI,IAAI,GAAGA,IAAI,CAACE,UAAU,KAAKF,IAAI,CAACO,IAAI,QAAQ,CAACP,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACE,UAAU,EAAEM,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,GACnI,qCAAqC,GACrC,uBAAuB,IAAI,CAACX,kBAAkB,EAAE,CAACU,OAAO,CAAC,CAAC,CAAC,MAAM,GACjE,kCAAkC,IAAI,CAACE,eAAe,IAAI,GAC1D,sBAAsB,IAAI,CAACC,aAAa,KAAK,SAAS,GAAG,sBAAsB,GAAG,2BAA2B,GAAG,IAAI,CAACC,eAAe,GAAG,GAAG,IAAI,GAC9I,+BAA+B,IAAI,CAACC,QAAQ,EAAE;IAEhD,MAAMC,YAAY,GAAG,iBAAiB,IAAI,CAACC,UAAU,SAASC,kBAAkB,CAACX,QAAQ,CAAC,EAAE;IAE5FY,MAAM,CAACC,IAAI,CAACJ,YAAY,EAAE,QAAQ,CAAC;EACrC;CAED;AAhDYvB,sBAAsB,eALlCD,SAAS,CAAC;EACT6B,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,GACW9B,sBAAsB,CAgDlC;SAhDYA,sBAAsB","names":["Component","FinalizeOrderComponent","constructor","carrinhoService","ngOnInit","produtosDoCarrinho","obterProdutosDoCarrinho","toggleEntregaOpcao","calcularPrecoTotal","total","item","price","quantidade","concluirCompra","length","mensagem","map","name","toFixed","join","metodoPagamento","metodoEntrega","enderecoEntrega","dataHora","linkWhatsApp","numeroLoja","encodeURIComponent","window","open","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\gumal\\OneDrive\\Área de Trabalho\\malimpensa\\src\\app\\order\\finalize-order\\finalize-order.component.ts"],"sourcesContent":["import { Component, OnInit  } from '@angular/core';\nimport { CarrinhoService } from '../../services/carrinho.service';\n\n@Component({\n  selector: 'app-finalize-order',\n  templateUrl: './finalize-order.component.html',\n  styleUrls: ['./finalize-order.component.css']\n})\nexport class FinalizeOrderComponent implements OnInit {\n\n  metodoEntregaOpcao: string = 'entregar'; // Declare a variável\n  metodoPagamento: string = 'pix';\n  metodoEntrega: string = 'retirar';\n  enderecoEntrega: string = '';\n  dataHora: string = '';\n  numeroLoja: string = '+5519999372133';\n  produtosDoCarrinho: any[] = []; // Declare a propriedade produtosDoCarrinho aqui\n\n  constructor(private carrinhoService: CarrinhoService ) {}\n\n  ngOnInit() {\n    // Obtenha os produtos do carrinho usando o serviço\n    this.produtosDoCarrinho = this.carrinhoService.obterProdutosDoCarrinho();\n  }\n\n  toggleEntregaOpcao() {\n    // Implemente a função\n  }\n\n  calcularPrecoTotal(): number {\n    let total = 0;\n    for (const item of this.produtosDoCarrinho) {\n      total += item.price * item.quantidade;\n    }\n    return total;\n  }\n\n  concluirCompra() {\n    if (this.produtosDoCarrinho.length === 0) {\n      return;\n    }\n\n    const mensagem =\n      'Olá, gostaria de realizar um pedido!\\n\\n' +\n      this.produtosDoCarrinho.map(item => `${item.quantidade}x ${item.name} - R$${(item.price * item.quantidade).toFixed(2)}`).join('\\n') +\n      '\\n-------------------------------\\n' +\n      `Ficando no Total: R$${this.calcularPrecoTotal().toFixed(2)}\\n\\n` +\n      `O método de pagamento vai ser: ${this.metodoPagamento}\\n` +\n      `Metodo de entrega: ${this.metodoEntrega === 'retirar' ? 'Vou retirar o pedido' : 'Vou querer que entregue (' + this.enderecoEntrega + ')'}\\n` +\n      `Tudo isso quero para o dia: ${this.dataHora}`;\n\n    const linkWhatsApp = `https://wa.me/${this.numeroLoja}?text=${encodeURIComponent(mensagem)}`;\n\n    window.open(linkWhatsApp, '_blank');\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}