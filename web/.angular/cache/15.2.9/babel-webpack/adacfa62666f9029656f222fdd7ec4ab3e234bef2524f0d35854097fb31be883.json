{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./finalize-order/finalize-order.component\";\nimport * as i3 from \"./header/header.component\";\nexport class OrderComponent {\n  constructor(router, route) {\n    this.router = router;\n    this.route = route;\n  }\n  ngOnInit() {\n    // Verifique se o parâmetro \"from\" está presente na URL e se é igual a \"home\".\n    const fromParam = this.route.snapshot.queryParamMap.get('from');\n    if (fromParam !== 'home') {\n      this.router.navigate(['/']); // Redirecionar para a página inicial\n    }\n  }\n  // Método para verificar se o usuário está vindo da página inicial\n  isUserComingFromHomePage() {\n    // Implemente a lógica para verificar se o usuário está vindo da página inicial.\n    // Por exemplo, verifique se ele navegou a partir de um link ou botão na página inicial.\n    // Se você não tiver essa lógica, você pode definir um parâmetro na URL da página de pedidos\n    // quando o usuário acessar a partir da página inicial e verificar a presença desse parâmetro aqui.\n    // Exemplo: /pedidos?from=home\n    // Nesse caso, você verifica se \"from\" é igual a \"home\".\n    return true; // Implemente sua própria lógica aqui.\n  }\n}\n\nOrderComponent.ɵfac = function OrderComponent_Factory(t) {\n  return new (t || OrderComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n};\nOrderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: OrderComponent,\n  selectors: [[\"app-order\"]],\n  decls: 2,\n  vars: 0,\n  template: function OrderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-header\")(1, \"app-finalize-order\");\n    }\n  },\n  dependencies: [i2.FinalizeOrderComponent, i3.HeaderComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAQA,OAAM,MAAOA,cAAc;EAEzBC,YAAoBC,MAAc,EAAUC,KAAqB;IAA7C,WAAM,GAAND,MAAM;IAAkB,UAAK,GAALC,KAAK;EAAoB;EAErEC,QAAQ;IACN;IACA,MAAMC,SAAS,GAAG,IAAI,CAACF,KAAK,CAACG,QAAQ,CAACC,aAAa,CAACC,GAAG,CAAC,MAAM,CAAC;IAE/D,IAAIH,SAAS,KAAK,MAAM,EAAE;MACxB,IAAI,CAACH,MAAM,CAACO,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;EAEjC;EAEA;EACQC,wBAAwB;IAC9B;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,IAAI,CAAC,CAAC;EACf;;;AAtBWV,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAW;EAAAC;EAAAC;EAAAC;IAAA;MCR3BC,6BAAyB","names":["OrderComponent","constructor","router","route","ngOnInit","fromParam","snapshot","queryParamMap","get","navigate","isUserComingFromHomePage","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\gumal\\OneDrive\\Área de Trabalho\\malimpensa\\src\\app\\order\\order.component.ts","C:\\Users\\gumal\\OneDrive\\Área de Trabalho\\malimpensa\\src\\app\\order\\order.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.css']\n})\nexport class OrderComponent {\n\n  constructor(private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    // Verifique se o parâmetro \"from\" está presente na URL e se é igual a \"home\".\n    const fromParam = this.route.snapshot.queryParamMap.get('from');\n    \n    if (fromParam !== 'home') {\n      this.router.navigate(['/']); // Redirecionar para a página inicial\n    }\n  }\n\n  // Método para verificar se o usuário está vindo da página inicial\n  private isUserComingFromHomePage(): boolean {\n    // Implemente a lógica para verificar se o usuário está vindo da página inicial.\n    // Por exemplo, verifique se ele navegou a partir de um link ou botão na página inicial.\n    // Se você não tiver essa lógica, você pode definir um parâmetro na URL da página de pedidos\n    // quando o usuário acessar a partir da página inicial e verificar a presença desse parâmetro aqui.\n    // Exemplo: /pedidos?from=home\n    // Nesse caso, você verifica se \"from\" é igual a \"home\".\n    return true; // Implemente sua própria lógica aqui.\n  }\n\n}\n","<app-header></app-header>\r\n<app-finalize-order></app-finalize-order>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}