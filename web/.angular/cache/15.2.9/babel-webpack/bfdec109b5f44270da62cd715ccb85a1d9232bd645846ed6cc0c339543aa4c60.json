{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nlet ProductsComponent = class ProductsComponent {\n  constructor(modalService, ProductService, http) {\n    this.modalService = modalService;\n    this.ProductService = ProductService;\n    this.http = http;\n    this.categories = ['bolo_pote', 'cone_trufado', 'bolo', 'pudim'];\n    this.filteredProducts = [];\n    this.allProducts = [];\n    this.selectedCategory = '*';\n    this.cancelarClicado = false;\n    this.title = '';\n    this.successMessage = ''; // Variável para armazenar a mensagem de sucesso\n    this.errorMessage = ''; // Variável para armazenar a mensagem de erro\n    this.showDeleteConfirmationModal = false;\n    this.newProduct = {};\n  }\n  ngOnInit() {\n    this.loadProducts();\n  }\n  filterProducts(category) {\n    // Filtrar produtos com base na categoria selecionada\n    this.filteredProducts = this.allProducts.filter(product => product.category === category);\n    this.selectedCategory = category;\n    if (category === '*') {\n      // Se a categoria for '*' (Todos), não aplique nenhum filtro\n      this.filteredProducts = this.allProducts;\n    } else {\n      // Caso contrário, filtre os produtos com base na categoria selecionada\n      this.filteredProducts = this.allProducts.filter(product => product.category === category);\n    }\n  }\n  //Carregando produtos\n  loadProducts() {\n    this.ProductService.getAllProducts().subscribe(products => {\n      this.allProducts = products; // Forçar a tipagem para um array\n      // Inicialmente, exiba todos os produtos\n      this.filteredProducts = this.allProducts;\n    });\n  }\n  //Ajusta url das imagens\n  getImageUrl(imageName) {\n    // Construa a URL completa da imagem com o prefixo do servidor\n    return `${this.ProductService.getImageServerUrl()}/${imageName}`;\n  }\n  //Adicionar Produto\n  addProduct() {\n    const formData = new FormData();\n    formData.append('name', this.newProduct.name);\n    formData.append('category', this.newProduct.category);\n    formData.append('content', this.newProduct.content);\n    formData.append('price', this.newProduct.price.toString());\n    formData.append('user_id', '1');\n    formData.append('file', this.newProduct.file);\n    this.ProductService.addProducts(formData).subscribe({\n      next: () => {\n        console.log('Produto adicionado com sucesso.');\n        this.successMessage = 'Produto cadastrado com sucesso!';\n        this.errorMessage = ''; // Limpar a mensagem de erro, se houver\n        this.newProduct = {}; // Limpar o objeto newProduct\n        this.loadProducts(); // Recarregar a lista de produtos\n      },\n\n      error: error => {\n        console.error('Erro ao adicionar produto:', error);\n        this.successMessage = ''; // Limpar a mensagem de sucesso, se houver\n        this.errorMessage = 'Falha ao cadastrar o produto.';\n      }\n    });\n  }\n  //Carregar imagem\n  updateImagePreview(event) {\n    if (event.target.files && event.target.files[0]) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        this.newProduct.file = e.target.result;\n      };\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  }\n  onFileSelected(event) {\n    const file = event.target.files[0];\n    this.newProduct.file = file;\n  }\n  // Modal adicionar produto \n  adicionarProduto(buttonNumber) {\n    this.cancelarClicado = false;\n    this.modalRef = this.modalService.show(this.modalAdicionarProduct);\n  }\n  fecharModalAdicionarProduto() {\n    this.modalRef?.hide();\n  }\n  //modal para editar o produto\n  abrirmodalEditarProduto(product) {\n    this.produtoDetalhado = product;\n    this.modalRef = this.modalService.show(this.modalEditarProduto);\n  }\n  fecharModalDetalhesProduto() {\n    this.modalRef?.hide();\n  }\n  //Deletar produto\n  deleteProduct(productId) {\n    this.ProductService.deleteProducts(productId).subscribe(() => {\n      console.log('Produto excluído com sucesso.');\n      this.loadProducts(); // Recarregar a lista de produtos após a exclusão\n      this.showDeleteConfirmationModal = false; // Fechar o modal após a exclusão\n      this.successMessage = 'Produto excluído com sucesso!';\n      this.errorMessage = ''; // Limpar a mensagem de erro, se houver\n    }, error => {\n      console.error('Erro ao excluir produto:', error);\n      this.showDeleteConfirmationModal = false; // Fechar o modal em caso de erro\n      this.successMessage = ''; // Limpar a mensagem de sucesso, se houver\n      this.errorMessage = 'Falha ao excluir o produto.';\n    });\n    this.productToDeleteId = productId;\n    this.showDeleteConfirmationModal = true;\n  }\n};\n__decorate([ViewChild('modalAdicionarProduct')], ProductsComponent.prototype, \"modalAdicionarProduct\", void 0);\n__decorate([ViewChild('modalEditarProduto')], ProductsComponent.prototype, \"modalEditarProduto\", void 0);\nProductsComponent = __decorate([Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})], ProductsComponent);\nexport { ProductsComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","ProductsComponent","constructor","modalService","ProductService","http","ngOnInit","loadProducts","filterProducts","category","filteredProducts","allProducts","filter","product","selectedCategory","getAllProducts","subscribe","products","getImageUrl","imageName","getImageServerUrl","addProduct","formData","FormData","append","newProduct","name","content","price","toString","file","addProducts","next","console","log","successMessage","errorMessage","error","updateImagePreview","event","target","files","reader","FileReader","onload","e","result","readAsDataURL","onFileSelected","adicionarProduto","buttonNumber","cancelarClicado","modalRef","show","modalAdicionarProduct","fecharModalAdicionarProduto","hide","abrirmodalEditarProduto","produtoDetalhado","modalEditarProduto","fecharModalDetalhesProduto","deleteProduct","productId","deleteProducts","showDeleteConfirmationModal","productToDeleteId","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\gumal\\OneDrive\\Área de Trabalho\\malimpensa\\web\\src\\app\\pages\\admin\\products\\products.component.ts"],"sourcesContent":["import { Component, ViewChild } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { ProductService } from 'src/app/services/product.service';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-products',\r\n  templateUrl: './products.component.html',\r\n  styleUrls: ['./products.component.css']\r\n})\r\n\r\nexport class ProductsComponent {\r\n\r\n  categories: string[] = ['bolo_pote', 'cone_trufado', 'bolo', 'pudim'];\r\n  filteredProducts:  any[] = [];\r\n  allProducts: any[] = []; \r\n  selectedCategory: string = '*';\r\n  cancelarClicado: boolean = false;\r\n  modalRef?: BsModalRef;\r\n  title: string = '';\r\n  produtoDetalhado: any;\r\n  successMessage: string = ''; // Variável para armazenar a mensagem de sucesso\r\n  errorMessage: string = ''; // Variável para armazenar a mensagem de erro\r\n  productToDeleteId: number | undefined;\r\n  showDeleteConfirmationModal = false;\r\n\r\n  newProduct: any = {};\r\n\r\n  constructor(\r\n    private modalService: BsModalService,\r\n    private ProductService: ProductService,\r\n    private http : HttpClient\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadProducts();\r\n  }\r\n\r\n  filterProducts(category: string) {\r\n    // Filtrar produtos com base na categoria selecionada\r\n    this.filteredProducts = this.allProducts.filter((product) => product.category === category);\r\n    this.selectedCategory = category;\r\n    if (category === '*') {\r\n      // Se a categoria for '*' (Todos), não aplique nenhum filtro\r\n      this.filteredProducts = this.allProducts;\r\n    } else {\r\n      // Caso contrário, filtre os produtos com base na categoria selecionada\r\n      this.filteredProducts = this.allProducts.filter(product => product.category === category);\r\n    }\r\n  }\r\n\r\n  //Carregando produtos\r\n\r\n  loadProducts() {\r\n    this.ProductService.getAllProducts().subscribe((products) => {\r\n      this.allProducts = products as any[]; // Forçar a tipagem para um array\r\n      // Inicialmente, exiba todos os produtos\r\n      this.filteredProducts = this.allProducts;\r\n    });\r\n  }\r\n\r\n  //Ajusta url das imagens\r\n\r\n  getImageUrl(imageName: string) {\r\n    // Construa a URL completa da imagem com o prefixo do servidor\r\n    return `${this.ProductService.getImageServerUrl()}/${imageName}`;\r\n  }\r\n\r\n  //Adicionar Produto\r\n\r\n  addProduct() {\r\n\r\n    const formData = new FormData();\r\n    formData.append('name', this.newProduct.name);\r\n    formData.append('category', this.newProduct.category);\r\n    formData.append('content', this.newProduct.content);\r\n    formData.append('price', this.newProduct.price.toString());\r\n    formData.append('user_id', '1');\r\n    formData.append('file', this.newProduct.file); \r\n\r\n    this.ProductService.addProducts(formData).subscribe({\r\n    next: () => {\r\n      console.log('Produto adicionado com sucesso.');\r\n      this.successMessage = 'Produto cadastrado com sucesso!';\r\n      this.errorMessage = ''; // Limpar a mensagem de erro, se houver\r\n      this.newProduct = {}; // Limpar o objeto newProduct\r\n      this.loadProducts(); // Recarregar a lista de produtos\r\n    },\r\n    error: (error) => {\r\n      console.error('Erro ao adicionar produto:', error);\r\n      this.successMessage = ''; // Limpar a mensagem de sucesso, se houver\r\n      this.errorMessage = 'Falha ao cadastrar o produto.';\r\n    }\r\n  });\r\n  }\r\n\r\n  //Carregar imagem\r\n  updateImagePreview(event: any) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e: any) => {\r\n        this.newProduct.file = e.target.result;\r\n        \r\n      };\r\n      reader.readAsDataURL(event.target.files[0]);\r\n    }\r\n  }\r\n\r\n  onFileSelected(event: any) {\r\n    const file = event.target.files[0];\r\n    this.newProduct.file = file;\r\n  }\r\n\r\n\r\n\r\n  // Modal adicionar produto \r\n\r\n  adicionarProduto(buttonNumber: number) {\r\n    this.cancelarClicado = false;\r\n    this.modalRef = this.modalService.show(this.modalAdicionarProduct);\r\n  }\r\n\r\n  fecharModalAdicionarProduto() {\r\n    this.modalRef?.hide();\r\n  }\r\n\r\n  //modal para editar o produto\r\n\r\n  abrirmodalEditarProduto(product: any) {\r\n    this.produtoDetalhado = product;\r\n    this.modalRef = this.modalService.show(this.modalEditarProduto);\r\n  }\r\n  \r\n  fecharModalDetalhesProduto() {\r\n    this.modalRef?.hide();\r\n  }\r\n\r\n  //Deletar produto\r\n\r\n  deleteProduct(productId: number) {\r\n    this.ProductService.deleteProducts(productId).subscribe(\r\n      () => {\r\n        console.log('Produto excluído com sucesso.');\r\n        this.loadProducts(); // Recarregar a lista de produtos após a exclusão\r\n        this.showDeleteConfirmationModal = false; // Fechar o modal após a exclusão\r\n        this.successMessage = 'Produto excluído com sucesso!';\r\n        this.errorMessage = ''; // Limpar a mensagem de erro, se houver\r\n      },\r\n      (error) => {\r\n        console.error('Erro ao excluir produto:', error);\r\n        this.showDeleteConfirmationModal = false; // Fechar o modal em caso de erro\r\n        this.successMessage = ''; // Limpar a mensagem de sucesso, se houver\r\n        this.errorMessage = 'Falha ao excluir o produto.';\r\n      }\r\n    );\r\n    this.productToDeleteId = productId;\r\n    this.showDeleteConfirmationModal = true;\r\n  }\r\n\r\n  @ViewChild('modalAdicionarProduct') modalAdicionarProduct!: string;\r\n\r\n  @ViewChild('modalEditarProduto') modalEditarProduto!: string;\r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}