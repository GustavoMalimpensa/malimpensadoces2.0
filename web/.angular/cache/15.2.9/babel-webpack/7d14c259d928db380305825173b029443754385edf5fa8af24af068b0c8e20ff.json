{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./finalize-order/finalize-order.component\";\nimport * as i3 from \"./header/header.component\";\nexport class OrderComponent {\n  constructor(router) {\n    this.router = router;\n  }\n  ngOnInit() {\n    // Verifique se o usuário acessou diretamente a página de pedidos\n    // e redirecione-o de volta para a página inicial se necessário.\n    if (!this.isUserComingFromHomePage()) {\n      this.router.navigate(['/']); // Redirecionar para a página inicial\n    }\n  }\n  // Método para verificar se o usuário está vindo da página inicial\n  isUserComingFromHomePage() {\n    // Implemente a lógica para verificar se o usuário está vindo da página inicial.\n    // Por exemplo, verifique se ele navegou a partir de um link ou botão na página inicial.\n    // Se você não tiver essa lógica, você pode definir um parâmetro na URL da página de pedidos\n    // quando o usuário acessar a partir da página inicial e verificar a presença desse parâmetro aqui.\n    // Exemplo: /pedidos?from=home\n    // Nesse caso, você verifica se \"from\" é igual a \"home\".\n    return true; // Implemente sua própria lógica aqui.\n  }\n}\n\nOrderComponent.ɵfac = function OrderComponent_Factory(t) {\n  return new (t || OrderComponent)(i0.ɵɵdirectiveInject(i1.Router));\n};\nOrderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: OrderComponent,\n  selectors: [[\"app-order\"]],\n  decls: 2,\n  vars: 0,\n  template: function OrderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-header\")(1, \"app-finalize-order\");\n    }\n  },\n  dependencies: [i2.FinalizeOrderComponent, i3.HeaderComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAQA,OAAM,MAAOA,cAAc;EAEzBC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;EAAY;EAEtCC,QAAQ;IACN;IACA;IACA,IAAI,CAAC,IAAI,CAACC,wBAAwB,EAAE,EAAE;MACpC,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;EAEjC;EAEA;EACQD,wBAAwB;IAC9B;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,IAAI,CAAC,CAAC;EACf;;;AArBWJ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAM;EAAAC;EAAAC;EAAAC;IAAA;MCR3BC,6BAAyB","names":["OrderComponent","constructor","router","ngOnInit","isUserComingFromHomePage","navigate","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\gumal\\OneDrive\\Área de Trabalho\\malimpensa\\src\\app\\order\\order.component.ts","C:\\Users\\gumal\\OneDrive\\Área de Trabalho\\malimpensa\\src\\app\\order\\order.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.css']\n})\nexport class OrderComponent {\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n    // Verifique se o usuário acessou diretamente a página de pedidos\n    // e redirecione-o de volta para a página inicial se necessário.\n    if (!this.isUserComingFromHomePage()) {\n      this.router.navigate(['/']); // Redirecionar para a página inicial\n    }\n  }\n\n  // Método para verificar se o usuário está vindo da página inicial\n  private isUserComingFromHomePage(): boolean {\n    // Implemente a lógica para verificar se o usuário está vindo da página inicial.\n    // Por exemplo, verifique se ele navegou a partir de um link ou botão na página inicial.\n    // Se você não tiver essa lógica, você pode definir um parâmetro na URL da página de pedidos\n    // quando o usuário acessar a partir da página inicial e verificar a presença desse parâmetro aqui.\n    // Exemplo: /pedidos?from=home\n    // Nesse caso, você verifica se \"from\" é igual a \"home\".\n    return true; // Implemente sua própria lógica aqui.\n  }\n\n}\n","<app-header></app-header>\r\n<app-finalize-order></app-finalize-order>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}