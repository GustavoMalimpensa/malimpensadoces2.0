{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nlet ProductsComponent = class ProductsComponent {\n  constructor(modalService, productService,\n  // Corrija o nome do serviço aqui\n  http // Injete o HttpClient\n  ) {\n    this.modalService = modalService;\n    this.productService = productService;\n    this.http = http;\n    this.products = [];\n    this.newProduct = {\n      imageUrl: '',\n      category: '',\n      name: '',\n      content: '',\n      price: '',\n      user_id: '1'\n    };\n  }\n  ngOnInit() {\n    this.loadProducts();\n  }\n  loadProducts() {\n    this.ProductService.getAllProducts().subscribe(products => {\n      this.products = products;\n    }, error => {\n      console.error('Erro ao carregar produtos:', error);\n    });\n  }\n  addProduct() {\n    if (!this.newProduct.name) {\n      alert('Por favor, insira o nome do produto.');\n      return;\n    }\n    this.ProductService.addProducts(this.newProduct).subscribe(response => {\n      console.log('Produto adicionado com sucesso:', response);\n      this.newProduct.name = ''; // Limpar o campo de entrada\n      this.loadProducts(); // Recarregar a lista de produtos\n    }, error => {\n      console.error('Erro ao adicionar produto:', error);\n    });\n  }\n  deleteProduct(productId) {\n    this.ProductService.deleteProduct(productId).subscribe(() => {\n      console.log('Produto excluído com sucesso.');\n      this.loadProducts(); // Recarregar a lista de produtos após a exclusão\n    }, error => {\n      console.error('Erro ao excluir produto:', error);\n    });\n  }\n  openModal(buttonNumber) {\n    this.title = `Comprar produtos`;\n    this.modalRef = this.modalService.show(this.modalTemplate);\n  }\n};\n__decorate([ViewChild('modalTemplate')], ProductsComponent.prototype, \"modalTemplate\", void 0);\nProductsComponent = __decorate([Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})], ProductsComponent);\nexport { ProductsComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,SAAS,QAAQ,eAAe;AAS7C,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAc5BC,YACUC,YAA4B,EAC5BC,cAA8B;EAAE;EAChCC,IAAgB,CAAC;EAAA;IAFjB,iBAAY,GAAZF,YAAY;IACZ,mBAAc,GAAdC,cAAc;IACd,SAAI,GAAJC,IAAI;IAfd,aAAQ,GAAU,EAAE;IAEpB,eAAU,GAAQ;MAChBC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;KACV;EAOE;EAEHC,QAAQ;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAGAA,YAAY;IACV,IAAI,CAACC,cAAc,CAACC,cAAc,EAAE,CAACC,SAAS,CAC3CC,QAAe,IAAI;MAClB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IAC1B,CAAC,EACAC,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,CACF;EACH;EAIAE,UAAU;IACR,IAAI,CAAC,IAAI,CAACC,UAAU,CAACb,IAAI,EAAE;MACzBc,KAAK,CAAC,sCAAsC,CAAC;MAC7C;;IAGF,IAAI,CAACR,cAAc,CAACS,WAAW,CAAC,IAAI,CAACF,UAAU,CAAC,CAACL,SAAS,CACvDQ,QAAQ,IAAI;MACXL,OAAO,CAACM,GAAG,CAAC,iCAAiC,EAAED,QAAQ,CAAC;MACxD,IAAI,CAACH,UAAU,CAACb,IAAI,GAAG,EAAE,CAAC,CAAC;MAC3B,IAAI,CAACK,YAAY,EAAE,CAAC,CAAC;IACvB,CAAC,EACAK,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,CACF;EACH;EAEAQ,aAAa,CAACC,SAAiB;IAC7B,IAAI,CAACb,cAAc,CAACY,aAAa,CAACC,SAAS,CAAC,CAACX,SAAS,CACpD,MAAK;MACHG,OAAO,CAACM,GAAG,CAAC,+BAA+B,CAAC;MAC5C,IAAI,CAACZ,YAAY,EAAE,CAAC,CAAC;IACvB,CAAC,EACAK,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,CAAC,CACF;EACH;EAEAU,SAAS,CAACC,YAAoB;IAC5B,IAAI,CAACC,KAAK,GAAG,kBAAkB;IAC/B,IAAI,CAACC,QAAQ,GAAG,IAAI,CAAC5B,YAAY,CAAC6B,IAAI,CAAC,IAAI,CAACC,aAAa,CAAC;EAC5D;CAID;AAF6BC,YAA3BlC,SAAS,CAAC,eAAe,CAAC,wDAAwB;AAzExCC,iBAAiB,eAL7BF,SAAS,CAAC;EACToC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACWpC,iBAAiB,CA2E7B;SA3EYA,iBAAiB","names":["Component","ViewChild","ProductsComponent","constructor","modalService","productService","http","imageUrl","category","name","content","price","user_id","ngOnInit","loadProducts","ProductService","getAllProducts","subscribe","products","error","console","addProduct","newProduct","alert","addProducts","response","log","deleteProduct","productId","openModal","buttonNumber","title","modalRef","show","modalTemplate","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\gumal\\OneDrive\\Área de Trabalho\\malimpens2.0\\web\\src\\app\\admin\\products\\products.component.ts"],"sourcesContent":["import { Component, ViewChild } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { ProductService } from 'src/services/ProductService';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent {\n\n  products: any[] = [];\n\n  newProduct: any = {\n    imageUrl: '',\n    category: '',\n    name: '',\n    content: '',\n    price: '',\n    user_id: '1',\n  };\n  modalRef?: BsModalRef;\n  \n  constructor(\n    private modalService: BsModalService,\n    private productService: ProductService, // Corrija o nome do serviço aqui\n    private http: HttpClient // Injete o HttpClient\n  ) {}\n\n  ngOnInit(): void {\n    this.loadProducts();\n  }\n\n \n  loadProducts() {\n    this.ProductService.getAllProducts().subscribe(\n      (products: any[]) => {\n        this.products = products;\n      },\n      (error) => {\n        console.error('Erro ao carregar produtos:', error);\n      }\n    );\n  }\n  \n\n\n  addProduct() {\n    if (!this.newProduct.name) {\n      alert('Por favor, insira o nome do produto.');\n      return;\n    }\n\n    this.ProductService.addProducts(this.newProduct).subscribe(\n      (response) => {\n        console.log('Produto adicionado com sucesso:', response);\n        this.newProduct.name = ''; // Limpar o campo de entrada\n        this.loadProducts(); // Recarregar a lista de produtos\n      },\n      (error) => {\n        console.error('Erro ao adicionar produto:', error);\n      }\n    );\n  }\n\n  deleteProduct(productId: number) {\n    this.ProductService.deleteProduct(productId).subscribe(\n      () => {\n        console.log('Produto excluído com sucesso.');\n        this.loadProducts(); // Recarregar a lista de produtos após a exclusão\n      },\n      (error) => {\n        console.error('Erro ao excluir produto:', error);\n      }\n    );\n  }\n\n  openModal(buttonNumber: number) {\n    this.title = `Comprar produtos`;\n    this.modalRef = this.modalService.show(this.modalTemplate);\n  }\n\n  @ViewChild('modalTemplate') modalTemplate!: string;\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}