{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nlet ProductsComponent = class ProductsComponent {\n  constructor(modalService, ProductService) {\n    this.modalService = modalService;\n    this.ProductService = ProductService;\n    this.categories = ['bolo_pote', 'cone_trufado', 'bolo', 'pudim'];\n    this.filteredProducts = [];\n    this.allProducts = [];\n    this.selectedCategory = '*';\n    this.cancelarClicado = false;\n    this.title = '';\n    this.successMessage = '';\n    this.errorMessage = '';\n    this.showDeleteConfirmationModal = false;\n    this.newProduct = {\n      category: '',\n      name: '',\n      content: '',\n      price: '',\n      file: '',\n      user_id: '1'\n    };\n  }\n  ngOnInit() {\n    this.loadProducts();\n  }\n  //filtrar por pesquisa\n  filterProducts(category) {\n    // Filtrar produtos com base na categoria selecionada\n    this.filteredProducts = this.allProducts.filter(product => product.category === category);\n    this.selectedCategory = category;\n    if (category === '*') {\n      // Se a categoria for '*' (Todos), não aplique nenhum filtro\n      this.filteredProducts = this.allProducts;\n    } else {\n      // Caso contrário, filtre os produtos com base na categoria selecionada\n      this.filteredProducts = this.allProducts.filter(product => product.category === category);\n    }\n  }\n  //Carregando produtos\n  loadProducts() {\n    this.ProductService.getAllProducts().subscribe(products => {\n      this.allProducts = products; // Forçar a tipagem para um array\n      // Inicialmente, exiba todos os produtos\n      this.filteredProducts = this.allProducts;\n    });\n  }\n  //Adicionar Produto\n  addProduct() {\n    // Certifique-se de que this.newProduct contém as informações do produto\n    this.ProductService.addProducts(this.newProduct).subscribe(() => {\n      console.log('Produto adicionado com sucesso.');\n      this.successMessage = 'Produto cadastrado com sucesso!';\n      this.errorMessage = ''; // Limpar a mensagem de erro, se houver\n      this.newProduct = {}; // Limpar o objeto newProduct\n      this.loadProducts(); // Recarregar a lista de produtos\n    }, error => {\n      console.error('Erro ao adicionar produto:', error);\n      this.successMessage = ''; // Limpar a mensagem de sucesso, se houver\n      this.errorMessage = 'Falha ao cadastrar o produto.';\n    });\n  }\n  //modal para editar o produto\n  abrirmodalEditarProduto(product) {\n    this.produtoDetalhado = product;\n    this.modalRef = this.modalService.show(this.modalEditarProduto);\n  }\n  fecharmodalEditarProduto() {\n    this.modalRef?.hide();\n  }\n  //modal adicionar produto\n  adicionarProduto(buttonNumber) {\n    this.cancelarClicado = false;\n    this.modalRef = this.modalService.show(this.modalAdicionarProduct);\n  }\n  //modal confirmar deletar produto\n  confirmarDeletarProduto(buttonNumber) {\n    this.title = `Excluir Produto?`;\n    this.modalRef = this.modalService.show(this.modalDeletarProduto);\n  }\n  modalDeleteProduct(productId) {\n    this.productToDeleteId = productId;\n    this.showDeleteConfirmationModal = false;\n  }\n  deleteProduct(productId) {\n    this.ProductService.deleteProducts(productId).subscribe(() => {\n      console.log('Produto excluído com sucesso.');\n      this.loadProducts(); // Recarregar a lista de produtos após a exclusão\n      this.showDeleteConfirmationModal = false; // Fechar o modal após a exclusão\n      this.successMessage = 'Produto excluído com sucesso!';\n      this.errorMessage = ''; // Limpar a mensagem de erro, se houver\n    }, error => {\n      console.error('Erro ao excluir produto:', error);\n      this.showDeleteConfirmationModal = false; // Fechar o modal em caso de erro\n      this.successMessage = ''; // Limpar a mensagem de sucesso, se houver\n      this.errorMessage = 'Falha ao excluir o produto.';\n    });\n    this.productToDeleteId = productId;\n    this.showDeleteConfirmationModal = true;\n  }\n  updateImagePreview(event) {\n    if (event.target.files && event.target.files[0]) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        this.newProduct.file = e.target.result;\n      };\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  }\n  cancelDelete() {\n    this.productToDeleteId = undefined; // Limpar o ID do produto a ser excluído\n    this.showDeleteConfirmationModal = false; // Fechar o modal\n  }\n};\n\n__decorate([ViewChild('modalAdicionarProduct')], ProductsComponent.prototype, \"modalAdicionarProduct\", void 0);\n__decorate([ViewChild('modalEditarProduto')], ProductsComponent.prototype, \"modalEditarProduto\", void 0);\n__decorate([ViewChild('modalDeletarProduto')], ProductsComponent.prototype, \"modalDeletarProduto\", void 0);\nProductsComponent = __decorate([Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})], ProductsComponent);\nexport { ProductsComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","ProductsComponent","constructor","modalService","ProductService","category","name","content","price","file","user_id","ngOnInit","loadProducts","filterProducts","filteredProducts","allProducts","filter","product","selectedCategory","getAllProducts","subscribe","products","addProduct","addProducts","newProduct","console","log","successMessage","errorMessage","error","abrirmodalEditarProduto","produtoDetalhado","modalRef","show","modalEditarProduto","fecharmodalEditarProduto","hide","adicionarProduto","buttonNumber","cancelarClicado","modalAdicionarProduct","confirmarDeletarProduto","title","modalDeletarProduto","modalDeleteProduct","productId","productToDeleteId","showDeleteConfirmationModal","deleteProduct","deleteProducts","updateImagePreview","event","target","files","reader","FileReader","onload","e","result","readAsDataURL","cancelDelete","undefined","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\gumal\\OneDrive\\Área de Trabalho\\malimpensa\\web\\src\\app\\pages\\admin\\products\\products.component.ts"],"sourcesContent":["import { Component, ViewChild } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { ProductService } from 'src/app/services/product.service';\r\n\r\n@Component({\r\n  selector: 'app-products',\r\n  templateUrl: './products.component.html',\r\n  styleUrls: ['./products.component.css']\r\n})\r\n\r\nexport class ProductsComponent {\r\n\r\n  categories: string[] = ['bolo_pote', 'cone_trufado', 'bolo', 'pudim'];\r\n  filteredProducts:  any[] = [];\r\n  allProducts: any[] = []; \r\n  selectedCategory: string = '*';\r\n  cancelarClicado: boolean = false;\r\n  modalRef?: BsModalRef;\r\n  title: string = '';\r\n  produtoDetalhado: any;\r\n  successMessage: string = '';\r\n  errorMessage: string = '';\r\n  productToDeleteId: number | undefined;\r\n  showDeleteConfirmationModal = false;\r\n\r\n  newProduct: any = {\r\n\r\n    category: '',\r\n    name: '',\r\n    content: '',\r\n    price: '',\r\n    file: '',\r\n    user_id: '1',\r\n\r\n  };\r\n\r\n  constructor(\r\n    private modalService: BsModalService,\r\n    private ProductService: ProductService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadProducts();\r\n  }\r\n\r\n  //filtrar por pesquisa\r\n\r\n  filterProducts(category: string) {\r\n    // Filtrar produtos com base na categoria selecionada\r\n    this.filteredProducts = this.allProducts.filter((product) => product.category === category);\r\n    this.selectedCategory = category;\r\n    if (category === '*') {\r\n      // Se a categoria for '*' (Todos), não aplique nenhum filtro\r\n      this.filteredProducts = this.allProducts;\r\n    } else {\r\n      // Caso contrário, filtre os produtos com base na categoria selecionada\r\n      this.filteredProducts = this.allProducts.filter(product => product.category === category);\r\n    }\r\n  }\r\n\r\n  //Carregando produtos\r\n\r\n  loadProducts() {\r\n    this.ProductService.getAllProducts().subscribe((products) => {\r\n      this.allProducts = products as any[]; // Forçar a tipagem para um array\r\n      // Inicialmente, exiba todos os produtos\r\n      this.filteredProducts = this.allProducts;\r\n    });\r\n  }\r\n\r\n  //Adicionar Produto\r\n\r\n  addProduct() {\r\n    // Certifique-se de que this.newProduct contém as informações do produto\r\n    this.ProductService.addProducts(this.newProduct).subscribe(\r\n      () => {\r\n        console.log('Produto adicionado com sucesso.');\r\n        this.successMessage = 'Produto cadastrado com sucesso!';\r\n        this.errorMessage = ''; // Limpar a mensagem de erro, se houver\r\n        this.newProduct = {}; // Limpar o objeto newProduct\r\n        this.loadProducts(); // Recarregar a lista de produtos\r\n      },\r\n      (error) => {\r\n        console.error('Erro ao adicionar produto:', error);\r\n        this.successMessage = ''; // Limpar a mensagem de sucesso, se houver\r\n        this.errorMessage = 'Falha ao cadastrar o produto.';\r\n      }\r\n    );\r\n  }\r\n\r\n  //modal para editar o produto\r\n\r\n  abrirmodalEditarProduto(product: any) {\r\n    this.produtoDetalhado = product;\r\n    this.modalRef = this.modalService.show(this.modalEditarProduto);\r\n  }\r\n  \r\n  fecharmodalEditarProduto() {\r\n    this.modalRef?.hide();\r\n  }\r\n\r\n  //modal adicionar produto\r\n  \r\n  adicionarProduto(buttonNumber: number) {\r\n    this.cancelarClicado = false;\r\n    this.modalRef = this.modalService.show(this.modalAdicionarProduct);\r\n  }\r\n\r\n  //modal confirmar deletar produto\r\n\r\n  confirmarDeletarProduto(buttonNumber: number) {\r\n    this.title = `Excluir Produto?`;\r\n    this.modalRef = this.modalService.show(this.modalDeletarProduto);\r\n  }\r\n\r\n\r\n  modalDeleteProduct(productId: number) {\r\n    this.productToDeleteId = productId;\r\n    this.showDeleteConfirmationModal = false;\r\n  }\r\n\r\n  deleteProduct(productId: number) {\r\n    this.ProductService.deleteProducts(productId).subscribe(\r\n      () => {\r\n        console.log('Produto excluído com sucesso.');\r\n        this.loadProducts(); // Recarregar a lista de produtos após a exclusão\r\n        this.showDeleteConfirmationModal = false; // Fechar o modal após a exclusão\r\n        this.successMessage = 'Produto excluído com sucesso!';\r\n        this.errorMessage = ''; // Limpar a mensagem de erro, se houver\r\n      },\r\n      (error) => {\r\n        console.error('Erro ao excluir produto:', error);\r\n        this.showDeleteConfirmationModal = false; // Fechar o modal em caso de erro\r\n        this.successMessage = ''; // Limpar a mensagem de sucesso, se houver\r\n        this.errorMessage = 'Falha ao excluir o produto.';\r\n      }\r\n    );\r\n    this.productToDeleteId = productId;\r\n    this.showDeleteConfirmationModal = true;\r\n  }\r\n\r\n  updateImagePreview(event: any) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e: any) => {\r\n        this.newProduct.file = e.target.result;\r\n      };\r\n      reader.readAsDataURL(event.target.files[0]);\r\n    }\r\n  }\r\n\r\n  cancelDelete() {\r\n    this.productToDeleteId = undefined; // Limpar o ID do produto a ser excluído\r\n    this.showDeleteConfirmationModal = false; // Fechar o modal\r\n  }\r\n\r\n  \r\n  @ViewChild('modalAdicionarProduct') modalAdicionarProduct!: string;\r\n\r\n  @ViewChild('modalEditarProduto') modalEditarProduto!: string;\r\n\r\n  @ViewChild('modalDeletarProduto') modalDeletarProduto!: string;\r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}