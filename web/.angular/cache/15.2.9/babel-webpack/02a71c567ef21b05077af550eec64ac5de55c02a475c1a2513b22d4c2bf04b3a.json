{"ast":null,"code":"import interactionPlugin from '@fullcalendar/interaction';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport listPlugin from '@fullcalendar/list';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./header/header.component\";\nimport * as i2 from \"./products/products.component\";\nexport class UserComponent {\n  constructor(changeDetector) {\n    this.changeDetector = changeDetector;\n    this.calendarVisible = true;\n    this.calendarOptions = {\n      plugins: [interactionPlugin, dayGridPlugin, timeGridPlugin, listPlugin],\n      headerToolbar: {\n        left: 'prev,next today',\n        center: 'title',\n        right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n      },\n      initialView: 'dayGridMonth',\n      weekends: true,\n      editable: true,\n      selectable: true,\n      selectMirror: true,\n      dayMaxEvents: true,\n      eventClick: this.handleEventClick.bind(this),\n      eventsSet: this.handleEvents.bind(this)\n    };\n    this.currentEvents = [];\n  }\n  handleCalendarToggle() {\n    this.calendarVisible = !this.calendarVisible;\n  }\n  handleWeekendsToggle() {\n    const {\n      calendarOptions\n    } = this;\n    calendarOptions.weekends = !calendarOptions.weekends;\n  }\n  handleEventClick(clickInfo) {\n    if (confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n      clickInfo.event.remove();\n    }\n  }\n  handleEvents(events) {\n    this.currentEvents = events;\n    this.changeDetector.detectChanges();\n  }\n}\nUserComponent.ɵfac = function UserComponent_Factory(t) {\n  return new (t || UserComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserComponent,\n  selectors: [[\"app-user\"]],\n  decls: 2,\n  vars: 0,\n  template: function UserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-header\")(1, \"app-products\");\n    }\n  },\n  dependencies: [i1.HeaderComponent, i2.ProductsComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,OAAOA,iBAAiB,MAAM,2BAA2B;AACzD,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,UAAU,MAAM,oBAAoB;;;;AAO3C,OAAM,MAAOC,aAAa;EA0BxBC,YAAoBC,cAAiC;IAAjC,mBAAc,GAAdA,cAAc;IAzBlC,oBAAe,GAAG,IAAI;IACtB,oBAAe,GAAoB;MACjCC,OAAO,EAAE,CACPP,iBAAiB,EACjBC,aAAa,EACbC,cAAc,EACdC,UAAU,CACX;MACDK,aAAa,EAAE;QACbC,IAAI,EAAE,iBAAiB;QACvBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE;OACR;MACDC,WAAW,EAAE,cAAc;MAC3BC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,YAAY,EAAE,IAAI;MAElBC,UAAU,EAAE,IAAI,CAACC,gBAAgB,CAACC,IAAI,CAAC,IAAI,CAAC;MAC5CC,SAAS,EAAE,IAAI,CAACC,YAAY,CAACF,IAAI,CAAC,IAAI;KACvC;IACD,kBAAa,GAAe,EAAE;EAG9B;EAEAG,oBAAoB;IAClB,IAAI,CAACC,eAAe,GAAG,CAAC,IAAI,CAACA,eAAe;EAC9C;EAEAC,oBAAoB;IAClB,MAAM;MAAEC;IAAe,CAAE,GAAG,IAAI;IAChCA,eAAe,CAACb,QAAQ,GAAG,CAACa,eAAe,CAACb,QAAQ;EACtD;EAEAM,gBAAgB,CAACQ,SAAwB;IACvC,IAAIC,OAAO,CAAC,8CAA8CD,SAAS,CAACE,KAAK,CAACC,KAAK,GAAG,CAAC,EAAE;MACnFH,SAAS,CAACE,KAAK,CAACE,MAAM,EAAE;;EAE5B;EAEAT,YAAY,CAACU,MAAkB;IAC7B,IAAI,CAACC,aAAa,GAAGD,MAAM;IAC3B,IAAI,CAAC1B,cAAc,CAAC4B,aAAa,EAAE;EACrC;;AA/CW9B,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAA+B;EAAAC;EAAAC;EAAAC;IAAA;MCZ1BC,6BAAyB","names":["interactionPlugin","dayGridPlugin","timeGridPlugin","listPlugin","UserComponent","constructor","changeDetector","plugins","headerToolbar","left","center","right","initialView","weekends","editable","selectable","selectMirror","dayMaxEvents","eventClick","handleEventClick","bind","eventsSet","handleEvents","handleCalendarToggle","calendarVisible","handleWeekendsToggle","calendarOptions","clickInfo","confirm","event","title","remove","events","currentEvents","detectChanges","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\gumal\\OneDrive\\Área de Trabalho\\malimpensa\\src\\app\\user\\user.component.ts","C:\\Users\\gumal\\OneDrive\\Área de Trabalho\\malimpensa\\src\\app\\user\\user.component.html"],"sourcesContent":["import { Component, ChangeDetectorRef } from '@angular/core';\r\nimport { CalendarOptions, EventClickArg, EventApi } from '@fullcalendar/core';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport listPlugin from '@fullcalendar/list';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent {\r\n  calendarVisible = true;\r\n  calendarOptions: CalendarOptions = {\r\n    plugins: [\r\n      interactionPlugin,\r\n      dayGridPlugin,\r\n      timeGridPlugin,\r\n      listPlugin,\r\n    ],\r\n    headerToolbar: {\r\n      left: 'prev,next today',\r\n      center: 'title',\r\n      right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\r\n    },\r\n    initialView: 'dayGridMonth',\r\n    weekends: true,\r\n    editable: true,\r\n    selectable: true,\r\n    selectMirror: true,\r\n    dayMaxEvents: true,\r\n   \r\n    eventClick: this.handleEventClick.bind(this),\r\n    eventsSet: this.handleEvents.bind(this)\r\n  };\r\n  currentEvents: EventApi[] = [];\r\n\r\n  constructor(private changeDetector: ChangeDetectorRef) {\r\n  }\r\n\r\n  handleCalendarToggle() {\r\n    this.calendarVisible = !this.calendarVisible;\r\n  }\r\n\r\n  handleWeekendsToggle() {\r\n    const { calendarOptions } = this;\r\n    calendarOptions.weekends = !calendarOptions.weekends;\r\n  }\r\n\r\n  handleEventClick(clickInfo: EventClickArg) {\r\n    if (confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\r\n      clickInfo.event.remove();\r\n    }\r\n  }\r\n\r\n  handleEvents(events: EventApi[]) {\r\n    this.currentEvents = events;\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n}\r\n","<app-header></app-header>\r\n<app-products></app-products>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}