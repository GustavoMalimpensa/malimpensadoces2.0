{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet FinalizeOrderComponent = class FinalizeOrderComponent {\n  constructor(carrinhoService) {\n    this.carrinhoService = carrinhoService;\n    this.metodoEntregaOpcao = 'entregar'; // Declare a variável\n    this.metodoPagamento = 'pix';\n    this.metodoEntrega = 'retirar';\n    this.enderecoEntrega = '';\n    this.numeroLoja = '+5519999372133';\n    this.produtosDoCarrinho = []; // Declare a propriedade produtosDoCarrinho aqui\n    this.tipoEntrega = ''; // Variável para armazenar o tipo de entrega\n    this.Horario = '';\n    this.editandoHorario = false;\n    this.horarioPersonalizado = '';\n    this.totalCompra = 0;\n    this.valorEntrega = 0; // Inicialmente, o valor de entrega é 0\n  }\n\n  ngOnInit() {\n    // Obtenha os produtos do carrinho usando o serviço\n    this.produtosDoCarrinho = this.carrinhoService.obterProdutosDoCarrinho();\n  }\n  toggleEndereco() {\n    if (this.tipoEntrega === 'entregar') {\n      // Se a opção \"Entrega no Endereço\" estiver selecionada, mostre o campo de endereço\n      return true;\n    }\n    // Caso contrário, oculte o campo de endereço\n    return false;\n  }\n  calcularPrecoTotal() {\n    let total = 0;\n    for (const item of this.produtosDoCarrinho) {\n      total += item.price * item.quantidade;\n    }\n    return total;\n  }\n  calcularPrecoTotalFinal() {\n    let total = 0;\n    for (const item of this.produtosDoCarrinho) {\n      total += item.price * item.quantidade;\n    }\n    // Se a opção de entrega for \"entregar\", adicione o valor da entrega\n    if (this.tipoEntrega === 'entregar') {\n      total += this.valorEntrega;\n    }\n    return total;\n  }\n  // Função para formatar a hora\n  formatHorario(date) {\n    const hours = this.padZeroes(date.getHours());\n    const minutes = this.padZeroes(date.getMinutes());\n    return `${hours}:${minutes}`;\n  }\n  // Função auxiliar para adicionar zeros à esquerda\n  padZeroes(num) {\n    return num < 10 ? `0${num}` : `${num}`;\n  }\n  // Função para habilitar a edição do horário personalizado\n  editarHorario() {\n    this.editandoHorario = true;\n  }\n  concluirCompra() {\n    if (this.produtosDoCarrinho.length === 0) {\n      return;\n    }\n    let valorEntregaTexto = '';\n    let enderecoEntregaTexto = '';\n    if (this.tipoEntrega === 'entregar') {\n      this.valorEntrega = 10; // Define o valor da entrega como R$10,00 quando \"Entregar pedido\" é selecionado\n      valorEntregaTexto = `Taxa de entrega: R$${this.valorEntrega.toFixed(2)}`;\n      enderecoEntregaTexto = `Endereço de Entrega: ${this.enderecoEntrega}`;\n    } else {\n      this.valorEntrega = 0; // Define o valor da entrega como 0 quando \"Retirar pedido\" é selecionado\n      enderecoEntregaTexto = 'Retirar no local';\n    }\n    const totalCompra = this.calcularPrecoTotal();\n    const itensPedido = this.produtosDoCarrinho.map(item => `${item.quantidade}x ${item.name} - R$${(item.price * item.quantidade).toFixed(2)}`).join(' | ');\n    const mensagem = `Olá, gostaria de realizar um pedido!\\n\\n` + `${itensPedido}\\n\\n` + `Ficando : R$${totalCompra.toFixed(2)} + \\n` + `${valorEntregaTexto}\\n` + ` ------------\\n` + `Método de pagamento vai ser: ${this.metodoPagamento} \\n` + `Método de entrega: ${this.tipoEntrega === 'entregar' ? 'Entrega' : 'Retirar no local'}. ${enderecoEntregaTexto}, as ${this.Horario} horas. \\n\\n` + ` Aguardo seu retorno!`;\n    const linkWhatsApp = `https://wa.me/${this.numeroLoja}?text=${encodeURIComponent(mensagem)}`;\n    window.open(linkWhatsApp, '_blank');\n  }\n};\nFinalizeOrderComponent = __decorate([Component({\n  selector: 'app-finalize-order',\n  templateUrl: './finalize-order.component.html',\n  styleUrls: ['./finalize-order.component.css']\n})], FinalizeOrderComponent);\nexport { FinalizeOrderComponent };","map":{"version":3,"mappings":"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","names":["Component","FinalizeOrderComponent","constructor","carrinhoService","ngOnInit","produtosDoCarrinho","obterProdutosDoCarrinho","toggleEndereco","tipoEntrega","calcularPrecoTotal","total","item","price","quantidade","calcularPrecoTotalFinal","valorEntrega","formatHorario","date","hours","padZeroes","getHours","minutes","getMinutes","num","editarHorario","editandoHorario","concluirCompra","length","valorEntregaTexto","enderecoEntregaTexto","toFixed","enderecoEntrega","totalCompra","itensPedido","map","name","join","mensagem","metodoPagamento","Horario","linkWhatsApp","numeroLoja","encodeURIComponent","window","open","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\gumal\\OneDrive\\Área de Trabalho\\malimpensa\\src\\app\\order\\finalize-order\\finalize-order.component.ts"],"sourcesContent":["import { Component, OnInit  } from '@angular/core';\nimport { CarrinhoService } from '../../services/carrinho.service';\n\n@Component({\n  selector: 'app-finalize-order',\n  templateUrl: './finalize-order.component.html',\n  styleUrls: ['./finalize-order.component.css']\n})\nexport class FinalizeOrderComponent implements OnInit {\n\n  metodoEntregaOpcao: string = 'entregar'; // Declare a variável\n  metodoPagamento: string = 'pix';\n  metodoEntrega: string = 'retirar';\n  enderecoEntrega: string = '';\n  numeroLoja: string = '+5519999372133';\n  produtosDoCarrinho: any[] = []; // Declare a propriedade produtosDoCarrinho aqui\n  tipoEntrega: string = ''; // Variável para armazenar o tipo de entrega\n  Horario: string = '';\n  editandoHorario: boolean = false;\n  horarioPersonalizado: string = '';\n  totalCompra: number = 0;\n  valorEntrega: number = 0; // Inicialmente, o valor de entrega é 0\n\n  constructor(private carrinhoService: CarrinhoService ) {\n   \n  }\n\n  ngOnInit() {\n    // Obtenha os produtos do carrinho usando o serviço\n    this.produtosDoCarrinho = this.carrinhoService.obterProdutosDoCarrinho();\n  }\n\n  toggleEndereco() {\n    if (this.tipoEntrega === 'entregar') {\n      // Se a opção \"Entrega no Endereço\" estiver selecionada, mostre o campo de endereço\n      return true;\n    }\n    // Caso contrário, oculte o campo de endereço\n    return false;\n  }\n\n  calcularPrecoTotal(): number {\n    let total = 0;\n    for (const item of this.produtosDoCarrinho) {\n      total += item.price * item.quantidade;\n    }\n    return total;\n  }\n\n  calcularPrecoTotalFinal(): number {\n    let total = 0;\n\n    for (const item of this.produtosDoCarrinho) {\n      total += item.price * item.quantidade;\n    }\n\n    // Se a opção de entrega for \"entregar\", adicione o valor da entrega\n    if (this.tipoEntrega === 'entregar') {\n      total += this.valorEntrega;\n    }\n\n    return total;\n  }\n\n\n  // Função para formatar a hora\n  formatHorario(date: Date): string {\n    const hours = this.padZeroes(date.getHours());\n    const minutes = this.padZeroes(date.getMinutes());\n\n    return `${hours}:${minutes}`;\n  }\n\n  // Função auxiliar para adicionar zeros à esquerda\n  padZeroes(num: number): string {\n    return num < 10 ? `0${num}` : `${num}`;\n  }\n\n  // Função para habilitar a edição do horário personalizado\n  editarHorario() {\n    this.editandoHorario = true;\n  }\n\n  concluirCompra() {\n    if (this.produtosDoCarrinho.length === 0) { \n      return;\n    }\n  \n    let valorEntregaTexto = '';\n    let enderecoEntregaTexto = '';\n  \n    if (this.tipoEntrega === 'entregar') {\n      this.valorEntrega = 10; // Define o valor da entrega como R$10,00 quando \"Entregar pedido\" é selecionado\n      valorEntregaTexto = `Taxa de entrega: R$${this.valorEntrega.toFixed(2)}`;\n      enderecoEntregaTexto = `Endereço de Entrega: ${this.enderecoEntrega}`;\n    } else {\n      this.valorEntrega = 0; // Define o valor da entrega como 0 quando \"Retirar pedido\" é selecionado\n      enderecoEntregaTexto = 'Retirar no local';\n    }\n  \n    const totalCompra = this.calcularPrecoTotal();\n  \n    const itensPedido = this.produtosDoCarrinho.map(item => `${item.quantidade}x ${item.name} - R$${(item.price * item.quantidade).toFixed(2)}`).join(' | ');\n  \n    const mensagem =\n      `Olá, gostaria de realizar um pedido!\\n\\n` +\n      `${itensPedido}\\n\\n` +\n      `Ficando : R$${totalCompra.toFixed(2)} + \\n` +\n      `${valorEntregaTexto}\\n` +\n      ` ------------\\n` +\n      `Método de pagamento vai ser: ${this.metodoPagamento} \\n` +\n      `Método de entrega: ${this.tipoEntrega === 'entregar' ? 'Entrega' : 'Retirar no local'}. ${enderecoEntregaTexto}, as ${this.Horario} horas. \\n\\n` +\n      ` Aguardo seu retorno!`;\n  \n    const linkWhatsApp = `https://wa.me/${this.numeroLoja}?text=${encodeURIComponent(mensagem)}`;\n  \n    window.open(linkWhatsApp, '_blank');\n  }\n  \n  \n  \n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}